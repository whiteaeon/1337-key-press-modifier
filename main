import keyboard
import threading
import time

terminate = False

key_mapping = {
        'e': '3',
        't': '7',
        'i': '1',
        'o': '0',
        'a': '4',
        's': '5',
        'b': '8'
        }

def modify_key(event):
    global terminate
    
    if event.name == 'esc':
        terminate = True
        return False

    key_name = event.name
    if key_name.isupper():
        key_name = key_name.lower()

    if event.event_type == keyboard.KEY_DOWN and key_name in key_mapping:
        keyboard.press_and_release(key_mapping[key_name])
        return False 
    return True

def start_kb_listener():
    try:
        keyboard.on_press(modify_key, suppress=True)  #suppresses the original key
        while not terminate:
            time.sleep(0.1)
    except Exception as e:
        print(f'An error occurred: {e}')
    finally: 
        keyboard.unhook_all()
        

if __name__ == "__main__":
    listener_thread = threading.Thread(target=start_kb_listener)
    listener_thread.daemon = True
    listener_thread.start()

    try:
        while not terminate:
            time.sleep(0.1)
    except KeyboardInterrupt:
        print('Program has been terminated')
    finally:
        terminate = True
        listener_thread.join()
        print('Program has been terminated')
